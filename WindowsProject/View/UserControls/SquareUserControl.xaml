<Border
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
             xmlns:b="clr-namespace:AdvancedWPFDemo.View.Behaviors"
             xmlns:ec="clr-namespace:AdvancedWPFDemo.View.ExtendedComponents"
             xmlns:uc="clr-namespace:AdvancedWPFDemo.View.UserControls"
             x:Name="SquareUc" x:Class="AdvancedWPFDemo.View.UserControls.SquareUserControl"
             mc:Ignorable="d" 
             Background="LightBlue"
             
             
             Focusable="True"
             
             d:DesignHeight="100" d:DesignWidth="100" >
    <Border.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/FontStyleResourceDictionary.xaml"/>
                <ResourceDictionary Source="../Resources/ShapesStyleDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Border.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="MouseLeftButtonDown">
            <cmd:EventToCommand Command="{Binding OnMouseLeftBtnDownCommand}" PassEventArgsToCommand="True" />

        </i:EventTrigger>

        <i:EventTrigger EventName="MouseLeftButtonUp">
            <cmd:EventToCommand Command="{Binding OnMouseLeftBtnUpCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <i:Interaction.Behaviors>
        <!--Next version will use a custom RoutedCommand aproach instead of find ancestor-->
        <b:ClickableOverlayBehavior  Command="{Binding DataContext.AddLineBetweenShapesCommand,       
            RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ec:ShapesListBox}}}" 
                            CommandParameter="{Binding DataContext, ElementName=SquareUc, Mode=OneWay}"
        >
            <Rectangle Style="{StaticResource AddlineAdornerStyle}"/>
        </b:ClickableOverlayBehavior>
    </i:Interaction.Behaviors>

    <Border.InputBindings>
        <KeyBinding Command="Copy" CommandParameter="{Binding DataContext, ElementName=SquareUc}"/>
    </Border.InputBindings>

    <Grid Margin="10,5,10,10" >
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <TextBlock x:Name="Focused"/>
        <TextBlock Grid.Row="0" Text="{Binding Number}" Style="{StaticResource TextBlockHeader}" HorizontalAlignment="Center"/>
        <ListBox Grid.Row="1" Background="#19FFFFFF"  ItemsSource="{Binding Data}" BorderBrush="#FF11172B" BorderThickness="0,1,0,0">
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <UniformGrid Columns="1">
                        <TextBox Text="{Binding .}"/>
                    </UniformGrid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Border>















